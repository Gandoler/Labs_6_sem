// jenek 28 variant
//J  B  WS  const                                   WA
 0  0  00  00000000000000000000001                 00001  // reg[1] = a записываем константу в регист 1                                         вывод нуля

//J  B  WS  const                                   WA
 0  0  00  00000000000000000001000                 00101  // reg[5] = 8 записываем константу в регист 4 для сдвигов                             вывод нуля

//J  B  WS  comand_const                            WA
 0  0  10  00000000000000000000000                 00010  //reg[2] = sw_i записали со входа                                                     вывод нуля

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  00101   00010   00101    00000000          00011 //reg[3] = сдвинули на 8 вправо значение с sw_i и получили d                        вывод первый раз sw_i

//J  B  WS  const                                   WA
 0  0  00  00000000000000011111111                 00101  // reg[5] = записываем константу - маску в регист 4 для получения n                   вывод нуля

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  00111   00010   00101    00000000          00100 // reg[4] = сдали sw_i & 00000000000000011111111 - (правые 8 бит) получили n        вывод второй раз sw_i

//J  B  WS  const                                   WA
 0  0  00  00000000000000000000001                 00101  // reg[5] = 1 записываем константу в регист 5 для формулы an = a1 + (n-1)*d           вывод нуля   

//J  B  WS  comand_const                            WA
 0  0  11  00000000000000000000000                 00010  //reg[2] = 0 блягодяря alu                                                            вывод нуля

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  01000   00100   00101    00000000       00100 // reg[4] = reg[4]-reg[5] или n-1                                                      вывод reg[4]

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA 
 0  0  01  00000   00101   00100    00000000       00101 // reg[5] = reg[5] + reg[4]                                                            вывод reg[5]

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  01000   00011   00101    00000000       00011 // reg[3] = reg[3] - 1                                                                 вывод reg[3]

//J  B  WS  ALUOp   RA1     RA2      offset         comand_const
 0  1  01  11101   00010   00011    11111110       00000 // d>0 тогда переместимся на две команды назад                                         вывод reg[2]

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  00000   00001   00101    00000000       00001 // reg[1] = reg[1] + (reg[5])*d                                                        вывод reg[1]

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 1  0  00  00000   00001   00000    00000000       00000 // бесконечный вывод первого регистра                                                  вывод reg[1]

//пример будет a=1 d=5 n =5 тогда an = 1+(5-1)*5=21

