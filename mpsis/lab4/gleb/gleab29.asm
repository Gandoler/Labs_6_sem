// gleb 29 variant
//J  B  WS  const                                   WA
 0  0  00  00000000000000010011010                 00001  // reg[1] = a записываем константу в регист 1                                                            вывод нуля

//J  B  WS  const                                   WA
 0  0  00  00000000000000000000111                 00101  // reg[5] = записываем константу - маску в регист 5 для получения  трехбайтового sw_i                    вывод нуля

//J  B  WS  comand_const                            WA
 0  0  10  00000000000000000000000                 00010  //reg[2] = sw_i записали со входа                                                                        вывод нуля

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  00111   00010   00101    00000000        00010 // reg[2] = сделали sw_i & 00000000000000000000111 - (правые 3 бит) получили n                           вывод   sw_i

//J  B  WS  const                                   WA
 0  0  00  00000000000000000000000                 00111  // reg[7] = offset записываем константу в регист 7     (для переносов)                                  вывод нуля

//J  B  WS  const                                   WA
 0  0  00  00000000000000000000011                 01000  // reg[8] = offset записываем константу в регист 8      (для вырезаний по 3)                            вывод нуля

//J  B  WS  ALUOp   RA1     RA2      comand_const   WA
 0  0  01  00111   00001   00101    00000000        00011 // reg[3] = сделали a & 00000000000000000000111 - (правые 3 бит)                                         вывод   reg[1] или a

//J  B  WS  ALUOp   RA1     RA2      offset         comand_const
 0  1  01  11001   00010   00011    11111110       00000 // если левые 3 бита a не равны   sw_i тогда переход                                                      вывод reg[2]





